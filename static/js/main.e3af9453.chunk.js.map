{"version":3,"sources":["services/image-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","App.js","services/debounce.js","index.js"],"names":["fetchOptions","API_KEY","MAIN_URL","PAGE","ITEMS_PER_PAGE","value","a","fetch","fetching","json","result","fetchImages","Searchbar","onSubmit","onChange","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","alt","id","largeImage","onImageClick","width","height","onClick","ImageGallery","hits","map","hit","largeImageURL","webformatURL","tags","modalRoot","document","getElementById","Modal","onClose","handleBackdropClick","modalImage","modalAlt","createPortal","App","useState","searchQuery","setQuery","debouncedSearchQuery","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","status","setStatus","setHits","fetchImg","query","fetchingImages","then","res","prevState","catch","error","console","log","window","scrollTo","top","behavior","modal","setModalShown","setModalImage","setModalAlt","handleKeydown","e","code","resetModal","removeEventListener","target","dataLength","length","next","hasMore","loader","color","endMessage","style","textAlign","classList","contains","dataset","addEventListener","ReactDOM","render","StrictMode"],"mappings":"+PAAaA,EAAe,CACxBC,QAAS,qCACTC,SAAU,2BACVC,KAAM,EACNC,eAAgB,I,4CAGpB,WAA2BC,GAA3B,iBAAAC,EAAA,sEAC2BC,MAAM,GAAD,OACrBP,EAAaE,SADQ,gBACQF,EAAaC,QADrB,cACkCI,EADlC,iBACgDL,EAAaG,KAD7D,6DACsHH,EAAaI,iBAFnK,cACUI,EADV,gBAIyBA,EAASC,OAJlC,cAIUC,EAJV,yBAKWA,GALX,4C,sBAQeC,M,4ECMAC,EArBG,SAAC,GAA2B,EAAzBC,SAA0B,IAAhBC,EAAe,EAAfA,SAC3B,OACI,wBAAQC,UAAU,YAAlB,SACI,uBAAMA,UAAU,aAAaC,KAAK,GAAlC,UACI,wBAAQD,UAAU,oBAAlB,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZL,SAAUA,UCWfM,EAvBU,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,IAAKC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAClD,OACI,mCACI,oBAAIV,UAAU,mBAAd,SACI,qBACIM,IAAKA,EACL,aAAYG,EACZF,IAAKA,EACLI,MAAM,MACNC,OAAO,MACPZ,UAAU,yBACVa,QAASH,KARqBF,MCkBnCM,EAnBM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAML,EAAmB,EAAnBA,aAC1B,OACI,oBAAIV,UAAU,eAAd,SACKe,EAAKC,KAAI,SAAAC,GAAG,OACT,cAAC,EAAD,CACIR,WAAYQ,EAAIC,cAEhBZ,IAAKW,EAAIE,aACTZ,IAAKU,EAAIG,KACTV,aAAcA,GAHTO,EAAIT,UCRvBa,EAAYC,SAASC,eAAe,cAiB3BC,EAfD,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,oBAAqBC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACvD,OAAOC,uBACH,qBACI7B,UAAU,UACVyB,QAASA,EACTZ,QAASa,EAHb,SAKI,qBAAK1B,UAAU,QAAf,SACI,qBAAKM,IAAKqB,EAAYpB,IAAKqB,QAGnCP,ICyGOS,MA5Gf,WACI,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,ECZK,SAAqB5C,EAAO6C,GACvC,MAA4CJ,mBAASzC,GAArD,mBAAO8C,EAAP,KAAuBC,EAAvB,KAWA,OATAC,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBH,EAAkB/C,KACnB6C,GACH,OAAO,WACHM,aAAaF,MAElB,CAACjD,EAAO6C,IAEJC,EDAsBM,CAAYV,EAAa,KAMtD,EAA4BD,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAAwBb,mBAAS,IAAjC,mBAAOhB,EAAP,KAAa8B,EAAb,KAEMC,EAAW,SAAAC,GACbC,EAAeD,GACVE,MAAK,SAAAC,GACFL,GAAQ,SAAAM,GAAS,OACZA,EAAD,sBAAiCA,GAAjC,YAA+CD,EAAInC,OAAnD,YAAiBmC,EAAInC,SAEzB6B,EAAU,eAEbK,KAAKL,EAAU,YACfQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAGpCf,qBAAU,WACDJ,IACLjD,EAAaG,KAAO,EAChB8C,IACAW,EAAQ,IACRC,EAASZ,GACTsB,OAAOC,SAAS,CACZC,IAAKpC,SACLqC,SAAU,eAGnB,CAACzB,IAEJ,IAKA,EAA+BH,oBAAS,GAAxC,mBAAO6B,EAAP,KAAcC,EAAd,KACA,EAAoC9B,mBAAS,IAA7C,mBAAOJ,EAAP,KAAmBmC,EAAnB,KACA,EAAgC/B,mBAAS,IAAzC,mBAAOH,EAAP,KAAiBmC,EAAjB,KAeMC,EAAgB,SAAhBA,EAAgBC,GACH,WAAXA,EAAEC,MAAmBC,IACzBX,OAAOY,oBAAoB,UAAWJ,IAGpCG,EAAa,WACfL,EAAc,IACdC,EAAY,IACZF,GAAc,IAGlB,OACI,qCACI,cAAC,EAAD,CAAW9D,SAnEO,SAAAkE,GACtBhC,EAASgC,EAAEI,OAAO/E,UAoEd,cAAC,IAAD,CACIgF,WAAYvD,EAAKwD,OACjBC,KAvCO,WACfvF,EAAaG,MAAQ,EACrB0D,EAASZ,IAsCDuC,SAAS,EACTC,OACe,YAAX/B,GACI,cAAC,IAAD,CACI3C,UAAU,UACVC,KAAK,WACL0E,MAAM,UACN/D,OAAQ,IACRD,MAAO,MAInBiE,WACI,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,SACI,4DAjBZ,SAqBI,cAAC,EAAD,CAAcpE,aAjDL,SAAAuD,GACZA,EAAEI,OAAOU,UAAUC,SAAS,4BACjClB,EAAcG,EAAEI,OAAOY,QAAQrB,OAC/BG,EAAYE,EAAEI,OAAO9D,KACrBsD,GAAc,GACdL,OAAO0B,iBAAiB,UAAWlB,KA4CejD,KAAI,YAAMA,OAEvD6C,GACG,cAAC,EAAD,CACIhC,SAAUA,EACVD,WAAYA,EACZF,QAASuC,EACTtC,oBAhDY,SAAAuC,GACpBA,EAAEI,OAAOU,UAAUC,SAAS,YAAYb,W,YE5DpDgB,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ/D,SAASC,eAAe,W","file":"static/js/main.e3af9453.chunk.js","sourcesContent":["export const fetchOptions = {\r\n    API_KEY: '22215457-d2e131747f34337528d5fbfaa',\r\n    MAIN_URL: 'https://pixabay.com/api/',\r\n    PAGE: 1,\r\n    ITEMS_PER_PAGE: 12,\r\n};\r\n\r\nasync function fetchImages(value) {\r\n    const fetching = await fetch(\r\n        `${fetchOptions.MAIN_URL}?key=${fetchOptions.API_KEY}&q=${value}&page=${fetchOptions.PAGE}&image_type=photo&orientation=horizontal&per_page=${fetchOptions.ITEMS_PER_PAGE}`,\r\n    );\r\n    const result = await fetching.json();\r\n    return result;\r\n}\r\n\r\nexport default fetchImages;\r\n","const Searchbar = ({ onSubmit, onChange }) => {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" type=\"\">\r\n                <button className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={onChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, id, largeImage, onImageClick }) => {\r\n    return (\r\n        <>\r\n            <li className=\"ImageGalleryItem\" key={id}>\r\n                <img\r\n                    src={src}\r\n                    data-modal={largeImage}\r\n                    alt={alt}\r\n                    width=\"300\"\r\n                    height=\"300\"\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={onImageClick}\r\n                />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n    onImageClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onImageClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(hit => (\r\n                <ImageGalleryItem\r\n                    largeImage={hit.largeImageURL}\r\n                    key={hit.id}\r\n                    src={hit.webformatURL}\r\n                    alt={hit.tags}\r\n                    onImageClick={onImageClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onImageClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nconst Modal = ({ onClose, handleBackdropClick, modalImage, modalAlt }) => {\r\n    return createPortal(\r\n        <div\r\n            className=\"Overlay\"\r\n            onClose={onClose}\r\n            onClick={handleBackdropClick}\r\n        >\r\n            <div className=\"Modal\">\r\n                <img src={modalImage} alt={modalAlt} />\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\nimport useDebounce from './services/debounce';\nimport fetchingImages from './services/image-api';\nimport { fetchOptions } from './services/image-api';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n// import Button from './components/Button';\nimport Modal from './components/Modal';\n\nfunction App() {\n    const [searchQuery, setQuery] = useState(null);\n    const debouncedSearchQuery = useDebounce(searchQuery, 500);\n\n    const handleInputChange = e => {\n        setQuery(e.target.value);\n    };\n\n    const [status, setStatus] = useState('');\n    const [hits, setHits] = useState([]);\n\n    const fetchImg = query => {\n        fetchingImages(query)\n            .then(res => {\n                setHits(prevState =>\n                    !prevState ? [...res.hits] : [...prevState, ...res.hits],\n                );\n                setStatus('resolved');\n            })\n            .then(setStatus('pending'))\n            .catch(error => console.log(error));\n    };\n\n    useEffect(() => {\n        if (!debouncedSearchQuery) return;\n        fetchOptions.PAGE = 1;\n        if (debouncedSearchQuery) {\n            setHits([]);\n            fetchImg(debouncedSearchQuery);\n            window.scrollTo({\n                top: document,\n                behavior: 'smooth',\n            });\n        }\n    }, [debouncedSearchQuery]);\n\n    const onLoadMore = () => {\n        fetchOptions.PAGE += 1;\n        fetchImg(debouncedSearchQuery);\n    };\n\n    const [modal, setModalShown] = useState(false);\n    const [modalImage, setModalImage] = useState('');\n    const [modalAlt, setModalAlt] = useState('');\n\n    const onImageClick = e => {\n        if (!e.target.classList.contains('ImageGalleryItem-image')) return;\n        setModalImage(e.target.dataset.modal);\n        setModalAlt(e.target.alt);\n        setModalShown(true);\n        window.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleBackdropClick = e => {\n        if (e.target.classList.contains('Overlay')) resetModal();\n        return;\n    };\n\n    const handleKeydown = e => {\n        if (e.code === 'Escape') resetModal();\n        window.removeEventListener('keydown', handleKeydown);\n    };\n\n    const resetModal = () => {\n        setModalImage('');\n        setModalAlt('');\n        setModalShown(false);\n    };\n\n    return (\n        <>\n            <Searchbar onChange={handleInputChange} />\n\n            <InfiniteScroll\n                dataLength={hits.length}\n                next={onLoadMore}\n                hasMore={true}\n                loader={\n                    status === 'pending' && (\n                        <Loader\n                            className=\"spinner\"\n                            type=\"TailSpin\"\n                            color=\"#00BFFF\"\n                            height={100}\n                            width={100}\n                        />\n                    )\n                }\n                endMessage={\n                    <p style={{ textAlign: 'center' }}>\n                        <b>Yay! You have seen it all</b>\n                    </p>\n                }\n            >\n                <ImageGallery onImageClick={onImageClick} hits={[...hits]} />\n            </InfiniteScroll>\n            {modal && (\n                <Modal\n                    modalAlt={modalAlt}\n                    modalImage={modalImage}\n                    onClose={handleKeydown}\n                    handleBackdropClick={handleBackdropClick}\n                />\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n\r\n    return debouncedValue;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}