{"version":3,"sources":["services/image-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["fetchOptions","API_KEY","MAIN_URL","PAGE","ITEMS_PER_PAGE","value","a","fetch","fetching","json","result","fetchImages","Searchbar","onSubmit","onChange","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","alt","id","largeImage","onImageClick","width","height","onClick","ImageGallery","hits","map","hit","largeImageURL","webformatURL","tags","Button","onLoadMore","modalRoot","document","getElementById","Modal","handleKeydown","e","props","onClose","window","removeEventListener","this","createPortal","handleBackdropClick","modalImage","modalAlt","Component","App","useState","searchQuery","setQuery","status","setStatus","setHits","modal","setModalShown","setModalImage","setModalAlt","code","resetModal","preventDefault","fetchingImages","then","res","catch","err","console","log","target","length","classList","contains","dataset","addEventListener","prevState","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","color","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b42e263.chunk.js","sourcesContent":["export const fetchOptions = {\r\n    API_KEY: '22215457-d2e131747f34337528d5fbfaa',\r\n    MAIN_URL: 'https://pixabay.com/api/',\r\n    PAGE: 1,\r\n    ITEMS_PER_PAGE: 12,\r\n};\r\n\r\nasync function fetchImages(value) {\r\n    const fetching = await fetch(\r\n        `${fetchOptions.MAIN_URL}?key=${fetchOptions.API_KEY}&q=${value}&page=${fetchOptions.PAGE}&image_type=photo&orientation=horizontal&per_page=${fetchOptions.ITEMS_PER_PAGE}`,\r\n    );\r\n    const result = await fetching.json();\r\n    return result;\r\n}\r\n\r\nexport default fetchImages;\r\n","const Searchbar = ({ onSubmit, onChange }) => {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={onChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","const ImageGalleryItem = ({ src, alt, id, largeImage, onImageClick }) => {\r\n    return (\r\n        <>\r\n            <li className=\"ImageGalleryItem\" key={id}>\r\n                <img\r\n                    src={src}\r\n                    data-modal={largeImage}\r\n                    alt={alt}\r\n                    width=\"300\"\r\n                    height=\"300\"\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={onImageClick}\r\n                />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onImageClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(hit => (\r\n                <ImageGalleryItem\r\n                    largeImage={hit.largeImageURL}\r\n                    key={hit.id}\r\n                    src={hit.webformatURL}\r\n                    alt={hit.tags}\r\n                    onImageClick={onImageClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ImageGallery;\r\n","const Button = ({ onLoadMore }) => {\r\n    return (\r\n        <>\r\n            <button className=\"Button\" type=\"button\" onClick={onLoadMore}>\r\n                Load more\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    handleKeydown = e => {\r\n        this.props.onClose();\r\n    };\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div\r\n                className=\"Overlay\"\r\n                onClose={this.handleKeydown}\r\n                onClick={this.props.handleBackdropClick}\r\n            >\r\n                <div className=\"Modal\">\r\n                    <img\r\n                        src={this.props.modalImage}\r\n                        alt={this.props.modalAlt}\r\n                    />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport fetchingImages from './services/image-api';\nimport { fetchOptions } from './services/image-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nfunction App() {\n    const [searchQuery, setQuery] = useState('');\n\n    const handleInputChange = e => {\n        setQuery(e.target.value);\n    };\n\n    const [status, setStatus] = useState('');\n    const [hits, setHits] = useState(null);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        fetchOptions.PAGE = 1;\n        fetchingImages(searchQuery)\n            .then(res => {\n                setHits(res.hits);\n                setStatus('resolved');\n            })\n            .then(setStatus('pending'))\n            .catch(err => {\n                setStatus('rejected');\n                console.log(err);\n            });\n    };\n\n    const onLoadMore = () => {\n        fetchOptions.PAGE += 1;\n        fetchingImages(searchQuery)\n            .then(res => {\n                setHits(prevState => [...prevState, ...res.hits]);\n                setStatus('resolved');\n            })\n            .then(setStatus('pending'))\n            .catch(error => console.log(error))\n            .finally(() => {\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n    };\n\n    const [modal, setModalShown] = useState(false);\n    const [modalImage, setModalImage] = useState('');\n    const [modalAlt, setModalAlt] = useState('');\n\n    const onImageClick = e => {\n        if (!e.target.classList.contains('ImageGalleryItem-image')) return;\n        setModalImage(e.target.dataset.modal);\n        setModalAlt(e.target.alt);\n        setModalShown(true);\n        window.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleBackdropClick = e => {\n        if (e.target.classList.contains('Overlay')) resetModal();\n        return;\n    };\n\n    const handleKeydown = e => {\n        if (e.code === 'Escape') resetModal();\n    };\n\n    const resetModal = () => {\n        setModalImage('');\n        setModalAlt('');\n        setModalShown(false);\n    };\n\n    return (\n        <>\n            <Searchbar onSubmit={handleSubmit} onChange={handleInputChange} />\n            {hits && hits.length > 0 && (\n                <>\n                    <ImageGallery\n                        onImageClick={onImageClick}\n                        hits={[...hits]}\n                    />\n                    <Button onLoadMore={onLoadMore} />\n                </>\n            )}\n            {modal && (\n                <Modal\n                    modalAlt={modalAlt}\n                    modalImage={modalImage}\n                    onClose={handleKeydown}\n                    handleBackdropClick={handleBackdropClick}\n                />\n            )}\n            {status === 'pending' && (\n                <Loader\n                    className=\"spinner\"\n                    type=\"TailSpin\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                />\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}