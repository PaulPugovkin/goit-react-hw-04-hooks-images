{"version":3,"sources":["services/image-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["fetchOptions","API_KEY","MAIN_URL","PAGE","ITEMS_PER_PAGE","value","a","fetch","fetching","json","result","fetchImages","Searchbar","onSubmit","onChange","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","src","alt","id","largeImage","onImageClick","width","height","onClick","ImageGallery","hits","map","hit","largeImageURL","webformatURL","tags","Button","onLoadMore","modalRoot","document","getElementById","Modal","onClose","handleBackdropClick","modalImage","modalAlt","createPortal","App","useState","searchQuery","setQuery","status","setStatus","setHits","useEffect","fetchingImages","then","res","catch","err","console","log","finally","window","scrollTo","top","behavior","modal","setModalShown","setModalImage","setModalAlt","handleKeydown","e","code","resetModal","removeEventListener","target","length","classList","contains","dataset","addEventListener","prevState","error","documentElement","scrollHeight","color","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8fa899d4.chunk.js","sourcesContent":["export const fetchOptions = {\r\n    API_KEY: '22215457-d2e131747f34337528d5fbfaa',\r\n    MAIN_URL: 'https://pixabay.com/api/',\r\n    PAGE: 1,\r\n    ITEMS_PER_PAGE: 12,\r\n};\r\n\r\nasync function fetchImages(value) {\r\n    const fetching = await fetch(\r\n        `${fetchOptions.MAIN_URL}?key=${fetchOptions.API_KEY}&q=${value}&page=${fetchOptions.PAGE}&image_type=photo&orientation=horizontal&per_page=${fetchOptions.ITEMS_PER_PAGE}`,\r\n    );\r\n    const result = await fetching.json();\r\n    return result;\r\n}\r\n\r\nexport default fetchImages;\r\n","const Searchbar = ({ onSubmit, onChange }) => {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form\r\n                className=\"SearchForm\"\r\n                // onSubmit={onSubmit}\r\n            >\r\n                {/* <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button> */}\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={onChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Searchbar;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ src, alt, id, largeImage, onImageClick }) => {\r\n    return (\r\n        <>\r\n            <li className=\"ImageGalleryItem\" key={id}>\r\n                <img\r\n                    src={src}\r\n                    data-modal={largeImage}\r\n                    alt={alt}\r\n                    width=\"300\"\r\n                    height=\"300\"\r\n                    className=\"ImageGalleryItem-image\"\r\n                    onClick={onImageClick}\r\n                />\r\n            </li>\r\n        </>\r\n    );\r\n};\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImage: PropTypes.string.isRequired,\r\n    onImageClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ hits, onImageClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(hit => (\r\n                <ImageGalleryItem\r\n                    largeImage={hit.largeImageURL}\r\n                    key={hit.id}\r\n                    src={hit.webformatURL}\r\n                    alt={hit.tags}\r\n                    onImageClick={onImageClick}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onImageClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n    return (\r\n        <>\r\n            <button className=\"Button\" type=\"button\" onClick={onLoadMore}>\r\n                Load more\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nconst Modal = ({ onClose, handleBackdropClick, modalImage, modalAlt }) => {\r\n    return createPortal(\r\n        <div\r\n            className=\"Overlay\"\r\n            onClose={onClose}\r\n            onClick={handleBackdropClick}\r\n        >\r\n            <div className=\"Modal\">\r\n                <img src={modalImage} alt={modalAlt} />\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport fetchingImages from './services/image-api';\nimport { fetchOptions } from './services/image-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nfunction App() {\n    const [searchQuery, setQuery] = useState('');\n\n    const handleInputChange = e => {\n        setQuery(e.target.value);\n    };\n\n    const [status, setStatus] = useState('');\n    const [hits, setHits] = useState(null);\n\n    useEffect(() => {\n        if (!searchQuery) return;\n        fetchOptions.PAGE = 1;\n        fetchingImages(searchQuery)\n            .then(res => {\n                setHits(res.hits);\n                setStatus('resolved');\n            })\n            .then(setStatus('pending'))\n            .catch(err => {\n                setStatus('rejected');\n                console.log(err);\n            })\n            .finally(\n                window.scrollTo({\n                    top: document,\n                    behavior: 'smooth',\n                }),\n            );\n    }, [searchQuery]);\n\n    // const handleSubmit = e => {\n    //     e.preventDefault();\n\n    //     fetchOptions.PAGE = 1;\n    //     fetchingImages(searchQuery)\n    //         .then(res => {\n    //             setHits(res.hits);\n    //             setStatus('resolved');\n    //         })\n    //         .then(setStatus('pending'))\n    //         .catch(err => {\n    //             setStatus('rejected');\n    //             console.log(err);\n    //         });\n    // };\n\n    const onLoadMore = () => {\n        fetchOptions.PAGE += 1;\n        fetchingImages(searchQuery)\n            .then(res => {\n                setHits(prevState => [...prevState, ...res.hits]);\n                setStatus('resolved');\n            })\n            .then(setStatus('pending'))\n            .catch(error => console.log(error))\n            .finally(() => {\n                window.scrollTo({\n                    top: document.documentElement.scrollHeight,\n                    behavior: 'smooth',\n                });\n            });\n    };\n\n    const [modal, setModalShown] = useState(false);\n    const [modalImage, setModalImage] = useState('');\n    const [modalAlt, setModalAlt] = useState('');\n\n    const onImageClick = e => {\n        if (!e.target.classList.contains('ImageGalleryItem-image')) return;\n        setModalImage(e.target.dataset.modal);\n        setModalAlt(e.target.alt);\n        setModalShown(true);\n        window.addEventListener('keydown', handleKeydown);\n    };\n\n    const handleBackdropClick = e => {\n        if (e.target.classList.contains('Overlay')) resetModal();\n        return;\n    };\n\n    const handleKeydown = e => {\n        if (e.code === 'Escape') resetModal();\n        window.removeEventListener('keydown', handleKeydown);\n    };\n\n    const resetModal = () => {\n        setModalImage('');\n        setModalAlt('');\n        setModalShown(false);\n    };\n\n    return (\n        <>\n            <Searchbar\n                // onSubmit={handleSubmit}\n                onChange={handleInputChange}\n            />\n            {hits && hits.length > 0 && (\n                <>\n                    <ImageGallery\n                        onImageClick={onImageClick}\n                        hits={[...hits]}\n                    />\n                    <Button onLoadMore={onLoadMore} />\n                </>\n            )}\n            {modal && (\n                <Modal\n                    modalAlt={modalAlt}\n                    modalImage={modalImage}\n                    onClose={handleKeydown}\n                    handleBackdropClick={handleBackdropClick}\n                />\n            )}\n            {status === 'pending' && (\n                <Loader\n                    className=\"spinner\"\n                    type=\"TailSpin\"\n                    color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n                />\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}